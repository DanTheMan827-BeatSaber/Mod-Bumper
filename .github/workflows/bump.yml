name: Bump mods
on:
  repository_dispatch:
    types:
      - Bump Needed Mods
      - Bump All Mods
concurrency:
  group: ${{ github.event.action }}
  cancel-in-progress: true
permissions:
  actions: write
jobs:
  cleanup-runs:
    uses: ./.github/workflows/cleanup-runs.yml
    secrets: inherit
    permissions:
      contents: write
      actions: write
  get-mods:
    runs-on: ubuntu-latest
    outputs:
      packageVersion: ${{ steps.parse-mods.outputs.packageVersion }}
      newestDependencies: ${{ steps.parse-mods.outputs.newestDependencies }}
      bs-cordl: ${{ steps.parse-mods.outputs.bs-cordl }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup qpm
        uses: fernthedev/qpm-action@v1
        with:
          workflow_token: ${{ secrets.GITHUB_TOKEN}}
          restore: false
          resolve_ndk: false
          cache: false
      - name: Parse mods.json
        id: parse-mods
        env:
          newestDependencies: '["beatsaber-hook:6.4.2","beatsaverplusplus:0.2.1","bs-cordl:4008.*","bs-utils:0.8.6","conditional-dependencies:0.3.0","config-utils:2.0.3","cpp-semver:0.1.2","custom-types:0.18.3","fmt:11.0.2","kaleb:0.1.9","libcryptopp:8.5.0","libil2cpp:0.4.0","paper2_scotland2:4.6.4","rapidjson-macros:2.1.0","scotland2:0.1.6","sombrero:0.1.43","song-details:1.0.2","tinyxml2:10.0.0","web-utils:0.6.7","bsml:0.4.55","chatplex-sdk-bs:6.4.1","custom-json-data:0.24.3","hollywood:1.2.2","lapiz:0.2.23","metacore:1.5.0","multiplayer-core:1.6.2","playlistcore:1.5.5","songcore:1.1.24","tracks:2.4.4"]'
          cordl: 4008.*
        run: |-
          echo "newestDependencies=$newestDependencies" >> $GITHUB_OUTPUT
          echo "bs-cordl=$cordl" >> $GITHUB_OUTPUT
          pkg_tmp="$(mktemp -d)"

          (
            cd "$pkg_tmp"
            qpm package create "package-test" "0.1.0"
            qpm dependency add bs-cordl -v "$cordl"
            qpm restore --update
            echo "packageVersion=$(cat extern/includes/bs-cordl/include/version.txt)" >> $GITHUB_OUTPUT
          )
          rm -r "$pkg_tmp"

          cat $GITHUB_OUTPUT
  bump-bsml:
    needs:
      - get-mods
    uses: ./.github/workflows/bump-reusable.yml
    secrets: inherit
    name: Bump bsml
    with:
      id: bsml
      game_version: ${{ needs.get-mods.outputs.packageVersion }}
      bs_cordl: ${{ needs.get-mods.outputs.bs-cordl }}
      newest_mods: ${{ needs.get-mods.outputs.newestDependencies }}
      repo: https://github.com/bsq-ports/Quest-BSML.git
      version: 0.4.55
      branch: master
      install: true
      installed_mods: "[]"
      force_build: ${{ github.event.action == 'Bump All Mods' && true }}
  bump-bts-yeeter:
    needs:
      - get-mods
    uses: ./.github/workflows/bump-reusable.yml
    secrets: inherit
    name: Bump bts-yeeter
    with:
      id: bts-yeeter
      game_version: ${{ needs.get-mods.outputs.packageVersion }}
      bs_cordl: ${{ needs.get-mods.outputs.bs-cordl }}
      newest_mods: ${{ needs.get-mods.outputs.newestDependencies }}
      repo: https://github.com/DanTheMan827-BeatSaber/Quest.BtsYeeter.git
      branch: master
      install: false
      installed_mods: "[]"
      force_build: ${{ github.event.action == 'Bump All Mods' && true }}
  bump-camera-utils:
    needs:
      - get-mods
    uses: ./.github/workflows/bump-reusable.yml
    secrets: inherit
    name: Bump camera-utils
    with:
      id: camera-utils
      game_version: ${{ needs.get-mods.outputs.packageVersion }}
      bs_cordl: ${{ needs.get-mods.outputs.bs-cordl }}
      newest_mods: ${{ needs.get-mods.outputs.newestDependencies }}
      repo: https://github.com/Reezonate/CameraUtils-Quest.git
      version: 1.1.11
      branch: master
      install: false
      installed_mods: "[]"
      force_build: ${{ github.event.action == 'Bump All Mods' && true }}
  bump-datakeeper:
    needs:
      - get-mods
    uses: ./.github/workflows/bump-reusable.yml
    secrets: inherit
    name: Bump datakeeper
    with:
      id: datakeeper
      game_version: ${{ needs.get-mods.outputs.packageVersion }}
      bs_cordl: ${{ needs.get-mods.outputs.bs-cordl }}
      newest_mods: ${{ needs.get-mods.outputs.newestDependencies }}
      repo: https://github.com/Metalit/PlayerDataKeeper.git
      branch: master
      install: false
      installed_mods: "[]"
      force_build: ${{ github.event.action == 'Bump All Mods' && true }}
  bump-DlcSorter:
    needs:
      - get-mods
    uses: ./.github/workflows/bump-reusable.yml
    secrets: inherit
    name: Bump DlcSorter
    with:
      id: DlcSorter
      game_version: ${{ needs.get-mods.outputs.packageVersion }}
      bs_cordl: ${{ needs.get-mods.outputs.bs-cordl }}
      newest_mods: ${{ needs.get-mods.outputs.newestDependencies }}
      repo: https://github.com/DanTheMan827-BeatSaber/Quest.DlcSorter.git
      branch: master
      install: false
      installed_mods: "[]"
      force_build: ${{ github.event.action == 'Bump All Mods' && true }}
  bump-FakeId:
    needs:
      - get-mods
    uses: ./.github/workflows/bump-reusable.yml
    secrets: inherit
    name: Bump FakeId
    with:
      id: FakeId
      game_version: ${{ needs.get-mods.outputs.packageVersion }}
      bs_cordl: ${{ needs.get-mods.outputs.bs-cordl }}
      newest_mods: ${{ needs.get-mods.outputs.newestDependencies }}
      repo: https://github.com/DanTheMan827-BeatSaber/Quest.FakeID.git
      branch: main
      install: false
      installed_mods: "[]"
      force_build: ${{ github.event.action == 'Bump All Mods' && true }}
  bump-lapiz:
    needs:
      - get-mods
    uses: ./.github/workflows/bump-reusable.yml
    secrets: inherit
    name: Bump lapiz
    with:
      id: lapiz
      game_version: ${{ needs.get-mods.outputs.packageVersion }}
      bs_cordl: ${{ needs.get-mods.outputs.bs-cordl }}
      newest_mods: ${{ needs.get-mods.outputs.newestDependencies }}
      repo: https://github.com/raineaeternal/Lapiz.git
      version: 0.2.23
      branch: main
      install: true
      installed_mods: "[]"
      force_build: ${{ github.event.action == 'Bump All Mods' && true }}
  bump-metacore:
    needs:
      - get-mods
    uses: ./.github/workflows/bump-reusable.yml
    secrets: inherit
    name: Bump metacore
    with:
      id: metacore
      game_version: ${{ needs.get-mods.outputs.packageVersion }}
      bs_cordl: ${{ needs.get-mods.outputs.bs-cordl }}
      newest_mods: ${{ needs.get-mods.outputs.newestDependencies }}
      repo: https://github.com/Metalit/MetaCore.git
      version: 1.5.0
      branch: main
      install: true
      installed_mods: "[]"
      force_build: ${{ github.event.action == 'Bump All Mods' && true }}
  bump-morebuttons:
    needs:
      - get-mods
    uses: ./.github/workflows/bump-reusable.yml
    secrets: inherit
    name: Bump morebuttons
    with:
      id: morebuttons
      game_version: ${{ needs.get-mods.outputs.packageVersion }}
      bs_cordl: ${{ needs.get-mods.outputs.bs-cordl }}
      newest_mods: ${{ needs.get-mods.outputs.newestDependencies }}
      repo: https://github.com/Metalit/MoreButtons.git
      branch: main
      install: false
      qmod_command: pwsh ./scripts/createqmod.ps1
      installed_mods: "[]"
      force_build: ${{ github.event.action == 'Bump All Mods' && true }}
  bump-NoPromo:
    needs:
      - get-mods
    uses: ./.github/workflows/bump-reusable.yml
    secrets: inherit
    name: Bump NoPromo
    with:
      id: NoPromo
      game_version: ${{ needs.get-mods.outputs.packageVersion }}
      bs_cordl: ${{ needs.get-mods.outputs.bs-cordl }}
      newest_mods: ${{ needs.get-mods.outputs.newestDependencies }}
      repo: https://github.com/DanTheMan827-BeatSaber/Quest.NoPromo.git
      branch: master
      install: false
      installed_mods: "[]"
      force_build: ${{ github.event.action == 'Bump All Mods' && true }}
  bump-songcore:
    needs:
      - get-mods
      - bump-bsml
      - bump-lapiz
    uses: ./.github/workflows/bump-reusable.yml
    secrets: inherit
    name: Bump songcore
    with:
      id: songcore
      game_version: ${{ needs.get-mods.outputs.packageVersion }}
      bs_cordl: ${{ needs.get-mods.outputs.bs-cordl }}
      newest_mods: ${{ needs.get-mods.outputs.newestDependencies }}
      repo: https://github.com/raineaeternal/Quest-SongCore.git
      version: 1.1.24
      branch: main
      install: true
      installed_mods: '["bsml","lapiz"]'
      force_build: ${{ github.event.action == 'Bump All Mods' && true }}
  bump-playlistcore:
    needs:
      - get-mods
      - bump-bsml
      - bump-metacore
      - bump-songcore
    uses: ./.github/workflows/bump-reusable.yml
    secrets: inherit
    name: Bump playlistcore
    with:
      id: playlistcore
      game_version: ${{ needs.get-mods.outputs.packageVersion }}
      bs_cordl: ${{ needs.get-mods.outputs.bs-cordl }}
      newest_mods: ${{ needs.get-mods.outputs.newestDependencies }}
      repo: https://github.com/Metalit/PlaylistCore.git
      version: 1.5.5
      branch: main
      install: true
      installed_mods: '["bsml","metacore","songcore"]'
      force_build: ${{ github.event.action == 'Bump All Mods' && true }}
  bump-chatplex-sdk-bs:
    needs:
      - get-mods
      - bump-bsml
      - bump-songcore
    uses: ./.github/workflows/bump-reusable.yml
    secrets: inherit
    name: Bump chatplex-sdk-bs
    with:
      id: chatplex-sdk-bs
      game_version: ${{ needs.get-mods.outputs.packageVersion }}
      bs_cordl: ${{ needs.get-mods.outputs.bs-cordl }}
      newest_mods: ${{ needs.get-mods.outputs.newestDependencies }}
      repo: https://github.com/hardcpp/QuestChatPlexSDK-BS.git
      version: 6.4.1
      branch: master
      install: true
      installed_mods: '["bsml","songcore"]'
      force_build: ${{ github.event.action == 'Bump All Mods' && true }}
  bump-custom-json-data:
    needs:
      - get-mods
      - bump-songcore
    uses: ./.github/workflows/bump-reusable.yml
    secrets: inherit
    name: Bump custom-json-data
    with:
      id: custom-json-data
      game_version: ${{ needs.get-mods.outputs.packageVersion }}
      bs_cordl: ${{ needs.get-mods.outputs.bs-cordl }}
      newest_mods: ${{ needs.get-mods.outputs.newestDependencies }}
      repo: https://github.com/bsq-ports/CustomJSONData.git
      version: 0.24.3
      branch: main
      install: true
      installed_mods: '["songcore"]'
      force_build: ${{ github.event.action == 'Bump All Mods' && true }}
  bump-hollywood:
    needs:
      - get-mods
      - bump-metacore
    uses: ./.github/workflows/bump-reusable.yml
    secrets: inherit
    name: Bump hollywood
    with:
      id: hollywood
      game_version: ${{ needs.get-mods.outputs.packageVersion }}
      bs_cordl: ${{ needs.get-mods.outputs.bs-cordl }}
      newest_mods: ${{ needs.get-mods.outputs.newestDependencies }}
      repo: https://github.com/Fernthedev/HollywoodQuest.git
      version: 1.2.2
      branch: master
      install: true
      build_command: pip install PyGithub && pip install requests && python3 ./update_ffmpeg.py && qpm s build
      installed_mods: '["metacore"]'
      force_build: ${{ github.event.action == 'Bump All Mods' && true }}
  bump-tracks:
    needs:
      - get-mods
      - bump-custom-json-data
      - bump-songcore
    uses: ./.github/workflows/bump-reusable.yml
    secrets: inherit
    name: Bump tracks
    with:
      id: tracks
      game_version: ${{ needs.get-mods.outputs.packageVersion }}
      bs_cordl: ${{ needs.get-mods.outputs.bs-cordl }}
      newest_mods: ${{ needs.get-mods.outputs.newestDependencies }}
      repo: https://github.com/bsq-ports/Tracks.git
      version: 2.4.4
      branch: master
      install: true
      build_command: rustup install nightly && rustup target add aarch64-linux-android --toolchain nightly && cargo install bindgen-cli && cargo install --locked --git https://github.com/bbqsrc/cargo-ndk.git cargo-ndk && qpm s build
      installed_mods: '["custom-json-data","songcore"]'
      force_build: ${{ github.event.action == 'Bump All Mods' && true }}
  bump-multiplayer-core:
    needs:
      - get-mods
      - bump-bsml
      - bump-lapiz
      - bump-songcore
    uses: ./.github/workflows/bump-reusable.yml
    secrets: inherit
    name: Bump multiplayer-core
    with:
      id: multiplayer-core
      game_version: ${{ needs.get-mods.outputs.packageVersion }}
      bs_cordl: ${{ needs.get-mods.outputs.bs-cordl }}
      newest_mods: ${{ needs.get-mods.outputs.newestDependencies }}
      repo: https://github.com/EnderdracheLP/MultiplayerCore.Quest.git
      version: 1.6.2
      branch: master
      install: true
      installed_mods: '["bsml","lapiz","songcore"]'
      force_build: ${{ github.event.action == 'Bump All Mods' && true }}
  bump-AntiVertigo,[object Object]:
    needs:
      - get-mods
    uses: ./.github/workflows/bump-reusable.yml
    secrets: inherit
    name: Bump AntiVertigo,[object Object]
    with:
      id:
        - AntiVertigo
        - repo: https://github.com/FrozenAlex/AntiVertigo.git
          branch: master
          dependencies:
            - bsml
            - lapiz
      game_version: ${{ needs.get-mods.outputs.packageVersion }}
      bs_cordl: ${{ needs.get-mods.outputs.bs-cordl }}
      newest_mods: ${{ needs.get-mods.outputs.newestDependencies }}
      install: false
      installed_mods: "[]"
      force_build: ${{ github.event.action == 'Bump All Mods' && true }}
  combine-artifacts:
    needs:
      - bump-AntiVertigo
      - bump-anytext
      - bump-BeatLeader
      - bump-BeatTogether
      - bump-BetterSongSearch
      - bump-bomb-qolorer
      - bump-bsl
      - bump-bsml
      - bump-BSNightcoreQuest
      - bump-bts-yeeter
      - bump-camera-utils
      - bump-chatplex-sdk-bs
      - bump-chroma
      - bump-ClockMod
      - bump-crashreporter
      - bump-custom-json-data
      - bump-custommodels
      - bump-datakeeper
      - bump-DlcSorter
      - bump-emulator-fpfc
      - bump-FakeId
      - bump-FasterScroll
      - bump-graphicstweaks
      - bump-HitScoreVisualizer
      - bump-HitsoundTweaqs
      - bump-hollywood
      - bump-imagecoverexpander
      - bump-IntroSkip
      - bump-jdfixer
      - bump-lapiz
      - bump-MappingExtensions
      - bump-metacore
      - bump-mod-list
      - bump-morebuttons
      - bump-multiplayer-core
      - bump-NoodleExtensions
      - bump-NoPromo
      - bump-Nya
      - bump-particletuner
      - bump-Play3rdPer
      - bump-playlistcore
      - bump-playlistdownloader
      - bump-playlistmanager
      - bump-qbeatsaberplus-gametweaker
      - bump-qbeatsaberplus-menumusic
      - bump-qbeatsaberplus-notetweaker
      - bump-qonsistentsabercolors
      - bump-Qounters
      - bump-QuestSounds
      - bump-RandomSongPicker
      - bump-RecentlyPlayed
      - bump-redbar
      - bump-replay
      - bump-scorepercentage
      - bump-slicedetails
      - bump-SmallQubes
      - bump-smoothedcontroller
      - bump-songchartvisualizer
      - bump-songcore
      - bump-songdownloader
      - bump-songrankedbadge
      - bump-stream-mod
      - bump-too-many-fireworks
      - bump-tracks
      - bump-transitions
      - bump-tricksaber-lite
      - bump-unicode
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: qmod_*
      - name: Move QMODs to root
        run: find artifacts -type f -name '*.qmod' -exec mv {} . \;
      - name: Upload combined artifact
        uses: actions/upload-artifact@v4
        with:
          name: all_qmods
          path: "*.qmod"
  clear-cache-end:
    runs-on: ubuntu-latest
    if: always()
    needs:
      - bump-AntiVertigo
      - bump-anytext
      - bump-BeatLeader
      - bump-BeatTogether
      - bump-BetterSongSearch
      - bump-bomb-qolorer
      - bump-bsl
      - bump-bsml
      - bump-BSNightcoreQuest
      - bump-bts-yeeter
      - bump-camera-utils
      - bump-chatplex-sdk-bs
      - bump-chroma
      - bump-ClockMod
      - bump-crashreporter
      - bump-custom-json-data
      - bump-custommodels
      - bump-datakeeper
      - bump-DlcSorter
      - bump-emulator-fpfc
      - bump-FakeId
      - bump-FasterScroll
      - bump-graphicstweaks
      - bump-HitScoreVisualizer
      - bump-HitsoundTweaqs
      - bump-hollywood
      - bump-imagecoverexpander
      - bump-IntroSkip
      - bump-jdfixer
      - bump-lapiz
      - bump-MappingExtensions
      - bump-metacore
      - bump-mod-list
      - bump-morebuttons
      - bump-multiplayer-core
      - bump-NoodleExtensions
      - bump-NoPromo
      - bump-Nya
      - bump-particletuner
      - bump-Play3rdPer
      - bump-playlistcore
      - bump-playlistdownloader
      - bump-playlistmanager
      - bump-qbeatsaberplus-gametweaker
      - bump-qbeatsaberplus-menumusic
      - bump-qbeatsaberplus-notetweaker
      - bump-qonsistentsabercolors
      - bump-Qounters
      - bump-QuestSounds
      - bump-RandomSongPicker
      - bump-RecentlyPlayed
      - bump-redbar
      - bump-replay
      - bump-scorepercentage
      - bump-slicedetails
      - bump-SmallQubes
      - bump-smoothedcontroller
      - bump-songchartvisualizer
      - bump-songcore
      - bump-songdownloader
      - bump-songrankedbadge
      - bump-stream-mod
      - bump-too-many-fireworks
      - bump-tracks
      - bump-transitions
      - bump-tricksaber-lite
      - bump-unicode
    steps:
      - name: Delete all shared caches
        env:
          GH_TOKEN: ${{ github.token }}
          REPO: ${{ github.repository }}
        run: |-
          gh api -H "Accept: application/vnd.github+json" \
            /repos/$REPO/actions/caches \
            --paginate \
            -q '.actions_caches[] | select(.key | startswith("shared-${{ github.run_id }}-")) | .id' |

          while read cache_id; do
            echo "Deleting cache id $cache_id"
            gh api --method DELETE "/repos/$REPO/actions/caches/$cache_id"
          done

